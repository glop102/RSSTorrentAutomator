import yaml
import time
from src import fileio

# print("Beginning Debug Tests")
# queue = fileio.FileIO()
# print("Empty Queue")
# print(yaml.dump(queue))
# delay = fileio.Debug10SDelay()
# queue.addNewJob(delay)
# print("Single debug item in Queue")
# print(yaml.dump(queue))
# time.sleep(1)
# print("About to save the queue and then imedatly stop all tasks")
# print(yaml.dump(queue))
# queue_state =  yaml.dump(queue)
# queue.stopQueue()
# time.sleep(5)
# queue = yaml.safe_load(queue_state)
# print("Just re-opened the queue through yaml - it should resume the single task")
# print(yaml.dump(queue))
# print("Now we wait on the task to finish and make sure the queue is empty again")
# while(len(queue.currentJobs) > 0):
#     time.sleep(1)
# print("Tasks all finished")
# print(yaml.dump(queue))
# queue.stopQueue()

# print()
# print("Now we test if close works correctly and only has a single task finish before shuting down the pool")
# queue = fileio.FileIO()
# print(yaml.dump(queue))
# queue.addNewJob(fileio.Debug10SDelay())
# queue.addNewJob(fileio.Debug10SDelay())
# queue.stopQueue()
# time.sleep(5)
# print(yaml.dump(queue))

# print()
# print("Testing runtime exception handling")
# queue = fileio.FileIO()
# print(yaml.dump(queue))
# queue.addNewJob(fileio.Debug10SDelayFail())
# time.sleep(11)
# print(yaml.dump(queue))

# print()
# print("Checking that User Cancel works as expected")
# queue = fileio.FileIO()
# print(yaml.dump(queue))
# queue.addNewJob(fileio.Debug10SDelay())
# time.sleep(4)
# queue.currentJobs[list(queue.currentJobs.keys())[0]].cancelProcessing()   #TODO - get the first UUID and check that, not index 0
# time.sleep(2)
# print(yaml.dump(queue))

queue = fileio.FileIO()
queue.hosts["whatbox"] = fileio.SFTPServerConfig(hostname="",username="",password="")
print(yaml.dump(queue))
# queue.addNewJob(fileio.SFTPDownload("whatbox","files/[Erai-raws] Kaizoku Oujo - 12 END [1080p][Multiple Subtitle][BF50E67A].mkv","/tmp"))
queue.addNewJob(fileio.SFTPDownload("whatbox","files/[Erai-raws] Kaizoku Oujo - 12 END [1080p][Multiple Subtitle][BF50E67A].mkv","/tmp/test.mkv"))
while(len(queue.currentJobs) > 0):
    time.sleep(2)
    print(queue.currentJobs[list(queue.currentJobs.keys())[0]].getProcessingStatus())
print(yaml.dump(queue))